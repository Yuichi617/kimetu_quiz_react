[{"/Users/sugiyamayuichi/Desktop/開発/kimetu_quiz_react/src/index.js":"1","/Users/sugiyamayuichi/Desktop/開発/kimetu_quiz_react/src/reportWebVitals.js":"2","/Users/sugiyamayuichi/Desktop/開発/kimetu_quiz_react/src/App.js":"3","/Users/sugiyamayuichi/Desktop/開発/kimetu_quiz_react/src/components/Layout.js":"4","/Users/sugiyamayuichi/Desktop/開発/kimetu_quiz_react/src/components/Header.js":"5","/Users/sugiyamayuichi/Desktop/開発/kimetu_quiz_react/src/components/Footer.js":"6","/Users/sugiyamayuichi/Desktop/開発/kimetu_quiz_react/src/components/Home.js":"7","/Users/sugiyamayuichi/Desktop/開発/kimetu_quiz_react/src/components/Main.js":"8","/Users/sugiyamayuichi/Desktop/開発/kimetu_quiz_react/src/components/Result.js":"9","/Users/sugiyamayuichi/Desktop/開発/kimetu_quiz_react/src/store/Store.js":"10","/Users/sugiyamayuichi/Desktop/開発/kimetu_quiz_react/src/components/Image.js":"11","/Users/sugiyamayuichi/Desktop/開発/kimetu_quiz_react/src/Firebase.js":"12"},{"size":622,"mtime":1608194443687,"results":"13","hashOfConfig":"14"},{"size":362,"mtime":1607673655272,"results":"15","hashOfConfig":"14"},{"size":793,"mtime":1607935434253,"results":"16","hashOfConfig":"14"},{"size":327,"mtime":1607674764689,"results":"17","hashOfConfig":"14"},{"size":286,"mtime":1607674695754,"results":"18","hashOfConfig":"14"},{"size":212,"mtime":1607674686899,"results":"19","hashOfConfig":"14"},{"size":3753,"mtime":1608890684561,"results":"20","hashOfConfig":"14"},{"size":6139,"mtime":1608119704177,"results":"21","hashOfConfig":"14"},{"size":8434,"mtime":1608641332878,"results":"22","hashOfConfig":"14"},{"size":3078,"mtime":1608890015664,"results":"23","hashOfConfig":"14"},{"size":336,"mtime":1607684898634,"results":"24","hashOfConfig":"25"},{"size":530,"mtime":1607934332898,"results":"26","hashOfConfig":"14"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},"16h1eg8",{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"29"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"29"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"29"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"xnxyfj",{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/sugiyamayuichi/Desktop/開発/kimetu_quiz_react/src/index.js",[],["55","56"],"/Users/sugiyamayuichi/Desktop/開発/kimetu_quiz_react/src/reportWebVitals.js",[],"/Users/sugiyamayuichi/Desktop/開発/kimetu_quiz_react/src/App.js",[],"/Users/sugiyamayuichi/Desktop/開発/kimetu_quiz_react/src/components/Layout.js",[],"/Users/sugiyamayuichi/Desktop/開発/kimetu_quiz_react/src/components/Header.js",[],"/Users/sugiyamayuichi/Desktop/開発/kimetu_quiz_react/src/components/Footer.js",[],"/Users/sugiyamayuichi/Desktop/開発/kimetu_quiz_react/src/components/Home.js",["57"],"import {Component} from 'react';\nimport {connect} from 'react-redux';\n\nclass Home extends Component{\n    constructor(props){\n        super(props);\n        this.state = {isModalOpen: false};\n        this.setInfo = this.setInfo.bind(this);\n    }\n\n    handleClickOpen(){\n        this.setState({isModalOpen: true});\n      }\n    \n    handleClickClose(){\n        this.setState({isModalOpen: false});\n      }\n\n    setInfo(){\n        /*問題のランダマイズ*/\n        function shuffle(array) {\n            for (let i = array.length - 1; i >= 0; i--) {\n              let rand = Math.floor(Math.random() * (i + 1));\n              // 配列の数値を入れ替える\n              [array[i], array[rand]] = [array[rand], array[i]]\n            }\n            return array;\n          }\n        var arr = shuffle([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29]);\n        arr = arr.slice(0,10)\n\n        return this.props.dispatch({ type: 'SETINFO', rand_arr: arr});\n    }\n\n    render(){\n        var crea_question_list = [];\n        for(let i = 0; i < 50; i++){\n            if(this.props.crea_question[i] == true){\n                crea_question_list.push(\n                    <tr className=\"crea_question_set\">\n                        <td>No.{i+1}</td>\n                        <td>{this.props.question[i].q_sentence}</td>\n                        <td>{this.props.question[i].options[this.props.question[i].answer-1]}</td>\n                    </tr>\n                );\n            } else {\n                crea_question_list.push(\n                    <tr className=\"crea_question_set\">\n                        <td>No.{i+1}</td>\n                        <td>???</td>\n                        <td>???</td>\n                    </tr>\n                );\n            }\n        }\n        //モーダル作成\n        let modal;\n        if (this.state.isModalOpen){\n            modal = (\n                <div className='crea_question_modal'>\n                  <div className='crea_question_modal-inner'>\n                    <div className=\"crea_question_modal-content\">\n                        <div className=\"modal-close-btn\">\n                            <i className=\"far fa-times-circle fa-2x\" onClick={() => this.handleClickClose()}></i>\n                        </div>\n                        <table>\n                            <tr className=\"crea_question_set\">\n                                <th　className=\"NoCol\"></th>\n                                <th className=\"QuestionCol\">問題</th>\n                                <th className=\"AnswerCol\">解答</th>\n                            </tr>\n                            {crea_question_list}\n                        </table>\n                    </div>\n                  </div>\n                </div>\n              );\n          }\n        return(\n            <div className=\"top-main-screen\">\n                <div className=\"top-main-screen-inner\">\n                    <div className=\"text1\">\n                        クイズに答えてあなたの鬼滅力を試しましょう。<br />\n                        問題に正解することで問題を解放できます。<br />\n                        全ての問題の解放を目指しましょう。\n                    </div>\n                    <div className=\"start_btn\" onClick={this.setInfo}>\n                        始める\n                    </div>\n                    <div className=\"open_crea_question_modal\" onClick={() => {this.handleClickOpen()}}>\n                        <label className=\"trigger_text\">解放した問題を見る</label>\n                    </div>\n                {modal}\n                </div>\n            </div>\n        )\n    }\n}\nHome = connect((state)=>state)(Home);\nexport default Home;","/Users/sugiyamayuichi/Desktop/開発/kimetu_quiz_react/src/components/Main.js",["58","59","60"],"import {Component} from 'react';\nimport {connect} from 'react-redux';\nimport firebase from \"../Firebase\";\nimport \"firebase/storage\";\n\nclass Main extends Component{\n    constructor(props){\n        super(props);\n        this.doAction1 = this.doAction1.bind(this);\n        this.doAction2 = this.doAction2.bind(this);\n        this.doAction3 = this.doAction3.bind(this);\n    }\n\n    //Realtime Databaseの更新\n    updateFireData(num_correct){\n        var class_count = firebase.database().ref('/class_count');\n        if (num_correct < 3) {\n            class_count.transaction((post) => {\n                if (post) {\n                    post.taisi++;\n                }\n                return post;\n              });\n        } else if(num_correct < 5){\n            class_count.transaction((post) => {\n                if (post) {\n                    post.tuguko++;\n                }\n                return post;\n              });\n        } else if(num_correct < 7){\n            class_count.transaction((post) => {\n                if (post) {\n                    post.kagen++;\n                }\n                return post;\n              });\n        } else if(num_correct < 9){\n        class_count.transaction((post) => {\n                if (post) {\n                    post.hasira++;\n                }\n                return post;\n              });\n        } else if(num_correct < 10){\n        class_count.transaction((post) => {\n                if (post) {\n                    post.jougen++;\n                }\n                return post;\n              });\n        } else if(num_correct === 10){\n        class_count.transaction((post) => {\n                if (post) {\n                    post.muzan++;\n                }\n                return post;\n              });\n        }\n    }\n\n    doAction1(e){\n        var flg = false;\n        //ストアに回答データを登録\n        if(1 === this.props.question[this.props.q_no[this.props.i]].answer){\n            // crea_questionを更新するためのデータを用意\n            var tmp_crea_question = this.props.crea_question.concat();\n            tmp_crea_question[this.props.q_no[this.props.i]] = true;\n            this.props.dispatch({ type: 'CORRECT', tmp_crea_question: tmp_crea_question});\n            flg = true;\n        } else {\n            this.props.dispatch({ type: 'INCORRECT'});\n        }\n        //最終問題の場合結果画面へ遷移\n        if(this.props.i===9){\n            if(flg==true){\n                this.updateFireData(this.props.correct+1);\n            }else{\n                this.updateFireData(this.props.correct);\n            }\n            return this.props.dispatch({ type: 'LAST'});\n        }\n            }\n\n    doAction2(e){\n        var flg = false;\n        //ストアに回答データを登録\n        if(2 === this.props.question[this.props.q_no[this.props.i]].answer){\n            // crea_questionを更新するためのデータを用意\n            var tmp_crea_question = this.props.crea_question.concat();\n            tmp_crea_question[this.props.q_no[this.props.i]] = true;\n            this.props.dispatch({ type: 'CORRECT', tmp_crea_question: tmp_crea_question});\n            flg = true;\n        } else {\n            this.props.dispatch({ type: 'INCORRECT'});\n        }\n        //最終問題の場合結果画面へ遷移\n        if(this.props.i===9){\n            if(flg==true){\n                this.updateFireData(this.props.correct+1);\n            }else{\n                this.updateFireData(this.props.correct);\n            }\n            return this.props.dispatch({ type: 'LAST'});\n        }\n    }\n\n    doAction3(e){\n        var flg = false;\n        //ストアに回答データを登録\n        if(3 === this.props.question[this.props.q_no[this.props.i]].answer){\n            // crea_questionを更新するためのデータを用意\n            var tmp_crea_question = this.props.crea_question.concat();\n            tmp_crea_question[this.props.q_no[this.props.i]] = true;\n            this.props.dispatch({ type: 'CORRECT', tmp_crea_question: tmp_crea_question});\n            flg = true;\n        } else {\n            this.props.dispatch({ type: 'INCORRECT'});\n        }\n        //最終問題の場合結果画面へ遷移\n        if(this.props.i===9){\n            if(flg==true){\n                this.updateFireData(this.props.correct+1);\n            }else{\n                this.updateFireData(this.props.correct);\n            }\n            return this.props.dispatch({ type: 'LAST'});\n        }\n    }\n\n    render(){\n        return(\n            <div className=\"main-screen\">\n                <div className=\"question-screen\">\n                    <div className=\"question_no_box\">\n                        <span className=\"question_no\">第{this.props.i + 1}問</span>\n                    </div>\n                    <div className=\"question_box\">\n                        {this.props.question[this.props.q_no[this.props.i]].q_sentence}\n                    </div>\n                    <div className=\"choice_box\">\n                        <div className=\"options\">\n                            <label onClick={this.doAction1}>\n                                <div className=\"option\">\n                                    {this.props.question[this.props.q_no[this.props.i]].options[0]}<br/>\n                                </div>\n                            </label>\n                            <label onClick={this.doAction2}>\n                                <div className=\"option\">\n                                    {this.props.question[this.props.q_no[this.props.i]].options[1]}<br/>\n                                </div>\n                            </label>\n                            <label onClick={this.doAction3}>\n                                <div className=\"option\">\n                                    {this.props.question[this.props.q_no[this.props.i]].options[2]}<br/>\n                                </div>\n                            </label>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\nMain = connect((state)=>state)(Main);\nexport default Main;","/Users/sugiyamayuichi/Desktop/開発/kimetu_quiz_react/src/components/Result.js",["61","62","63","64","65","66","67","68"],"import { Component } from \"react\";\nimport {connect} from 'react-redux';\nimport taisi from '../assets/images/taisi.jpg';\nimport tuguko from '../assets/images/tuguko.jpg';\nimport kagen from '../assets/images/kagen.jpg';\nimport hasira from '../assets/images/hasira.jpg';\nimport jougen from '../assets/images/jougen.jpg';\nimport muzan from '../assets/images/muzan.jpg';\nimport firebase from \"../Firebase\";\nimport \"firebase/storage\";\n\nclass Result extends Component{\n    constructor(props){\n        super(props);\n        this.reset = this.reset.bind(this);\n        this.state = { isModalOpen: false , data:[]};\n        //this.getFireData();\n        //console.log(\"constructor\"+this.state.data.taisi);\n    }\n\n    handleClickOpen(){\n        this.setState({isModalOpen: true});\n      }\n    \n    handleClickClose(){\n        this.setState({isModalOpen: false});\n      }\n\n    //Realtime Databaseからデータ取得\n    /*getFireData(){\n        var class_count = firebase.database().ref('/class_count');\n        class_count.on('value', (snapshot) =>{\n                this.setState({\n                    data : snapshot.val()\n                });       \n          });\n          //console.log(\"function:\"+this.state.data.taisi);\n        }*/\n\n    // 正解数に応じてレンダリング内容を変える.(テキスト)\n    renderRank(num_correct) {\n        if (num_correct < 3) {\n            return (\n            <div className=\"class_text\">\n                <span>鬼殺隊隊士級</span>\n            </div>)\n            } else if(num_correct < 5){\n            return(\n            <div className=\"class_text\">\n                <span>継子級</span>\n            </div>)\n            } else if(num_correct < 7){\n            return(\n            <div className=\"class_text\">\n                <span>下弦の鬼級</span>\n            </div>)\n            } else if(num_correct < 9){\n            return(\n            <div className=\"class_text\">\n                <span>柱級</span>\n            </div>)\n            } else if(num_correct < 10){\n            return(\n            <div className=\"class_text\">\n                <span>上弦の鬼級</span>\n            </div>)\n            } else if(num_correct === 10){\n            return(\n            <div className=\"class_text\">\n                <span>無惨級</span>\n            </div>)\n            }\n        }\n\n    // 正解数に応じてレンダリング内容を変える.(図)\n    renderHierarchie(num_correct) {\n        if (num_correct < 3) {\n            return (\n                <div className=\"result-image-box\">\n                    <img className=\"result-image\" src={taisi} width=\"400\"/>\n                </div>)\n            } else if(num_correct < 5){\n            return(\n                <div className=\"result-image-box\">\n                    <img className=\"result-image\" src={tuguko} width=\"400\"/>\n                </div>)\n            } else if(num_correct < 7){\n                return(\n                <div className=\"result-image-box\">\n                    <img className=\"result-image\" src={kagen} width=\"400\"/>\n                </div>)\n            } else if(num_correct < 9){\n                return(\n                <div className=\"result-image-box\">\n                    <img className=\"result-image\" src={hasira} width=\"400\"/>\n                </div>)\n            } else if(num_correct < 10){\n                return(\n                <div className=\"result-image-box\">\n                    <img className=\"result-image\" src={jougen} width=\"400\"/>\n                </div>)\n            } else if(num_correct === 10){\n                return(\n                <div className=\"result-image-box\">\n                    <img className=\"result-image\" src={muzan} width=\"400\"/>\n                </div>)\n            }\n        }\n\n        //正解数に応じてレンダリング内容を変える.(順位)\n        /*renderNumber(num_correct){\n            if (num_correct < 3) {\n                return (\n                    <div className=\"result-number-box\">\n                        あなたは{this.state.data.taisi}人目の鬼殺隊隊士です。\n                    </div>)\n                } else if(num_correct < 5){\n                return(\n                    <div className=\"result-number-box\">\n                        あなたは{this.state.data.tuguko}人目の継子です。\n                    </div>)\n                } else if(num_correct < 7){\n                    return(\n                    <div className=\"result-number-box\">\n                        あなたは{this.state.data.kagen}人目の下弦の鬼です。\n                    </div>)\n                } else if(num_correct < 9){\n                    return(\n                    <div className=\"result-number-box\">\n                        あなたは{this.state.data.hasira}人目の柱です。\n                    </div>)\n                } else if(num_correct < 10){\n                    return(\n                    <div className=\"result-number-box\">\n                        あなたは{this.state.data.jougen}人目の上弦の鬼です。\n                    </div>)\n                } else if(num_correct === 10){\n                    return(\n                    <div className=\"result-number-box\">\n                        あなたは{this.state.data.muzan}人目の鬼舞辻無惨です。\n                    </div>)\n                }\n        }*/\n\n        reset(e){\n            return this.props.dispatch({ type: 'RESET'});\n        }\n\n    render(){\n        //データベースからデータ取得\n        /*if(this.state.data === []){\n            this.getFireData();\n        }*/\n        var ans_list = [];\n        for(let i = 0; i < 10; i++){\n            if(this.props.ans_list[i] == true){\n                ans_list.push(\n                    <tr className=\"ans_set\">\n                        <td><i class=\"far fa-circle\"></i></td>\n                        <td>{this.props.question[this.props.q_no[i]].q_sentence}</td>\n                        <td>{this.props.question[this.props.q_no[i]].options[this.props.question[this.props.q_no[i]].answer-1]}</td>\n                    </tr>\n                );\n            } else {\n                ans_list.push(\n                    <tr className=\"ans_set\">\n                        <td><i class=\"fas fa-times\"></i></td>\n                        <td>{this.props.question[this.props.q_no[i]].q_sentence}</td>\n                        <td>{this.props.question[this.props.q_no[i]].options[this.props.question[this.props.q_no[i]].answer-1]}</td>\n                    </tr>\n                );\n            }\n        }\n        //モーダル作成\n        let modal;\n        if (this.state.isModalOpen){\n            modal = (\n                <div className='modal'>\n                  <div className='modal-inner'>\n                    <div className=\"modal-content\">\n                        <div className=\"modal-close-btn\">\n                            <i className=\"far fa-times-circle fa-2x\" onClick={() => this.handleClickClose()}></i>\n                        </div>\n                        <table>\n                            <tr className=\"ans_set\">\n                                <th></th>\n                                <th>問題</th>\n                                <th>解答</th>\n                            </tr>\n                            {ans_list}\n                        </table>\n                    </div>\n                  </div>\n                </div>\n              );\n          }\n        return(\n            <div className=\"result\">\n                <div className=\"result-inner\">\n                    <div className=\"result-text\">\n                    {console.log(\"return:\"+this.state.data.taisi)}\n                        {this.props.correct}問正解でした。\n                        あなたの鬼滅力は・・・\n                        {this.renderRank(this.props.correct)}\n                        {/*this.renderNumber(this.props.correct)*/}\n                    </div>\n                    {this.renderHierarchie(this.props.correct)}\n                        <div className=\"retry_btn\" onClick={this.reset}>再挑戦</div>\n                    <div className=\"print_answer\" >\n                        <span className=\"print_answer_text\" onClick={() => {this.handleClickOpen()}}>解答をみる</span>\n                    </div>\n                </div>\n                {modal}\n            </div>\n        );\n    }\n}\nResult = connect((state)=>state)(Result);\nexport default Result;","/Users/sugiyamayuichi/Desktop/開発/kimetu_quiz_react/src/store/Store.js",[],"/Users/sugiyamayuichi/Desktop/開発/kimetu_quiz_react/src/components/Image.js",["69"],"/Users/sugiyamayuichi/Desktop/開発/kimetu_quiz_react/src/Firebase.js",[],{"ruleId":"70","replacedBy":"71"},{"ruleId":"72","replacedBy":"73"},{"ruleId":"74","severity":1,"message":"75","line":38,"column":44,"nodeType":"76","messageId":"77","endLine":38,"endColumn":46},{"ruleId":"74","severity":1,"message":"75","line":76,"column":19,"nodeType":"76","messageId":"77","endLine":76,"endColumn":21},{"ruleId":"74","severity":1,"message":"75","line":99,"column":19,"nodeType":"76","messageId":"77","endLine":99,"endColumn":21},{"ruleId":"74","severity":1,"message":"75","line":122,"column":19,"nodeType":"76","messageId":"77","endLine":122,"endColumn":21},{"ruleId":"78","severity":1,"message":"79","line":9,"column":8,"nodeType":"80","messageId":"81","endLine":9,"endColumn":16},{"ruleId":"82","severity":1,"message":"83","line":80,"column":21,"nodeType":"84","endLine":80,"endColumn":76},{"ruleId":"82","severity":1,"message":"83","line":85,"column":21,"nodeType":"84","endLine":85,"endColumn":77},{"ruleId":"82","severity":1,"message":"83","line":90,"column":21,"nodeType":"84","endLine":90,"endColumn":76},{"ruleId":"82","severity":1,"message":"83","line":95,"column":21,"nodeType":"84","endLine":95,"endColumn":77},{"ruleId":"82","severity":1,"message":"83","line":100,"column":21,"nodeType":"84","endLine":100,"endColumn":77},{"ruleId":"82","severity":1,"message":"83","line":105,"column":21,"nodeType":"84","endLine":105,"endColumn":76},{"ruleId":"74","severity":1,"message":"75","line":156,"column":39,"nodeType":"76","messageId":"77","endLine":156,"endColumn":41},{"ruleId":"82","severity":1,"message":"83","line":12,"column":13,"nodeType":"84","endLine":12,"endColumn":54},"no-native-reassign",["85"],"no-negated-in-lhs",["86"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-unused-vars","'firebase' is defined but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]